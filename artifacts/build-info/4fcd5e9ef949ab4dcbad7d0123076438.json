{
	"id": "4fcd5e9ef949ab4dcbad7d0123076438",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"lab4solidity.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ncontract ExamGrader {\r\n    function gradeExam(int score) public pure returns (bool passed, string memory grade) {\r\n        if (score >= 60) {\r\n            if (score >= 80 && score <= 100) {\r\n                return (true, \"Achieved Grade: A\");\r\n            } else if (score >= 60 && score <= 79) {\r\n                return (true, \"Achieved Grade: B\");\r\n            }\r\n        } else {\r\n            if (score >= 40 && score <= 59) {\r\n                return (false, \"Achieved Grade: C\");\r\n            } else {\r\n                return (false, \"Better Luck Next Time\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"lab4solidity.sol": {
				"ExamGrader": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "score",
									"type": "int256"
								}
							],
							"name": "gradeExam",
							"outputs": [
								{
									"internalType": "bool",
									"name": "passed",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "grade",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lab4solidity.sol\":61:660  contract ExamGrader {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lab4solidity.sol\":61:660  contract ExamGrader {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf5485bdf\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lab4solidity.sol\":88:657  function gradeExam(int score) public pure returns (bool passed, string memory grade) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap3\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"lab4solidity.sol\":139:150  bool passed */\n      0x00\n        /* \"lab4solidity.sol\":152:171  string memory grade */\n      0x60\n        /* \"lab4solidity.sol\":197:199  60 */\n      0x3c\n        /* \"lab4solidity.sol\":188:193  score */\n      dup4\n        /* \"lab4solidity.sol\":188:199  score >= 60 */\n      slt\n        /* \"lab4solidity.sol\":184:650  if (score >= 60) {... */\n      tag_11\n      jumpi\n        /* \"lab4solidity.sol\":229:231  80 */\n      0x50\n        /* \"lab4solidity.sol\":220:225  score */\n      dup4\n        /* \"lab4solidity.sol\":220:231  score >= 80 */\n      slt\n      iszero\n        /* \"lab4solidity.sol\":220:247  score >= 80 && score <= 100 */\n      dup1\n      iszero\n      tag_12\n      jumpi\n      pop\n        /* \"lab4solidity.sol\":244:247  100 */\n      0x64\n        /* \"lab4solidity.sol\":235:240  score */\n      dup4\n        /* \"lab4solidity.sol\":235:247  score <= 100 */\n      sgt\n      iszero\n        /* \"lab4solidity.sol\":220:247  score >= 80 && score <= 100 */\n    tag_12:\n        /* \"lab4solidity.sol\":216:425  if (score >= 80 && score <= 100) {... */\n      iszero\n      tag_13\n      jumpi\n        /* \"lab4solidity.sol\":276:280  true */\n      0x01\n        /* \"lab4solidity.sol\":268:302  return (true, \"Achieved Grade: A\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      0x41636869657665642047726164653a2041000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_10)\n        /* \"lab4solidity.sol\":216:425  if (score >= 80 && score <= 100) {... */\n    tag_13:\n        /* \"lab4solidity.sol\":337:339  60 */\n      0x3c\n        /* \"lab4solidity.sol\":328:333  score */\n      dup4\n        /* \"lab4solidity.sol\":328:339  score >= 60 */\n      slt\n      iszero\n        /* \"lab4solidity.sol\":328:354  score >= 60 && score <= 79 */\n      dup1\n      iszero\n      tag_15\n      jumpi\n      pop\n        /* \"lab4solidity.sol\":352:354  79 */\n      0x4f\n        /* \"lab4solidity.sol\":343:348  score */\n      dup4\n        /* \"lab4solidity.sol\":343:354  score <= 79 */\n      sgt\n      iszero\n        /* \"lab4solidity.sol\":328:354  score >= 60 && score <= 79 */\n    tag_15:\n        /* \"lab4solidity.sol\":324:425  if (score >= 60 && score <= 79) {... */\n      iszero\n      tag_16\n      jumpi\n        /* \"lab4solidity.sol\":383:387  true */\n      0x01\n        /* \"lab4solidity.sol\":375:409  return (true, \"Achieved Grade: B\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      0x41636869657665642047726164653a2042000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_10)\n        /* \"lab4solidity.sol\":324:425  if (score >= 60 && score <= 79) {... */\n    tag_16:\n        /* \"lab4solidity.sol\":184:650  if (score >= 60) {... */\n      jump(tag_17)\n    tag_11:\n        /* \"lab4solidity.sol\":470:472  40 */\n      0x28\n        /* \"lab4solidity.sol\":461:466  score */\n      dup4\n        /* \"lab4solidity.sol\":461:472  score >= 40 */\n      slt\n      iszero\n        /* \"lab4solidity.sol\":461:487  score >= 40 && score <= 59 */\n      dup1\n      iszero\n      tag_18\n      jumpi\n      pop\n        /* \"lab4solidity.sol\":485:487  59 */\n      0x3b\n        /* \"lab4solidity.sol\":476:481  score */\n      dup4\n        /* \"lab4solidity.sol\":476:487  score <= 59 */\n      sgt\n      iszero\n        /* \"lab4solidity.sol\":461:487  score >= 40 && score <= 59 */\n    tag_18:\n        /* \"lab4solidity.sol\":457:639  if (score >= 40 && score <= 59) {... */\n      iszero\n      tag_19\n      jumpi\n        /* \"lab4solidity.sol\":516:521  false */\n      0x00\n        /* \"lab4solidity.sol\":508:543  return (false, \"Achieved Grade: C\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      0x41636869657665642047726164653a2043000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_10)\n        /* \"lab4solidity.sol\":457:639  if (score >= 40 && score <= 59) {... */\n    tag_19:\n        /* \"lab4solidity.sol\":592:597  false */\n      0x00\n        /* \"lab4solidity.sol\":584:623  return (false, \"Better Luck Next Time\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      0x426574746572204c75636b204e6578742054696d650000000000000000000000\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_10)\n        /* \"lab4solidity.sol\":184:650  if (score >= 60) {... */\n    tag_17:\n        /* \"lab4solidity.sol\":88:657  function gradeExam(int score) public pure returns (bool passed, string memory grade) {... */\n    tag_10:\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_22:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:410   */\n    tag_24:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":399:404   */\n      dup2\n        /* \"#utility.yul\":388:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":416:536   */\n    tag_25:\n        /* \"#utility.yul\":488:511   */\n      tag_40\n        /* \"#utility.yul\":505:510   */\n      dup2\n        /* \"#utility.yul\":488:511   */\n      tag_24\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":481:486   */\n      dup2\n        /* \"#utility.yul\":478:512   */\n      eq\n        /* \"#utility.yul\":468:530   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":523:524   */\n      dup1\n        /* \"#utility.yul\":516:528   */\n      revert\n        /* \"#utility.yul\":468:530   */\n    tag_41:\n        /* \"#utility.yul\":416:536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":542:679   */\n    tag_26:\n        /* \"#utility.yul\":587:592   */\n      0x00\n        /* \"#utility.yul\":625:631   */\n      dup2\n        /* \"#utility.yul\":612:632   */\n      calldataload\n        /* \"#utility.yul\":603:632   */\n      swap1\n      pop\n        /* \"#utility.yul\":641:673   */\n      tag_43\n        /* \"#utility.yul\":667:672   */\n      dup2\n        /* \"#utility.yul\":641:673   */\n      tag_25\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":542:679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":685:1012   */\n    tag_6:\n        /* \"#utility.yul\":743:749   */\n      0x00\n        /* \"#utility.yul\":792:794   */\n      0x20\n        /* \"#utility.yul\":780:789   */\n      dup3\n        /* \"#utility.yul\":771:778   */\n      dup5\n        /* \"#utility.yul\":767:790   */\n      sub\n        /* \"#utility.yul\":763:795   */\n      slt\n        /* \"#utility.yul\":760:879   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":798:877   */\n      tag_46\n      tag_22\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":760:879   */\n    tag_45:\n        /* \"#utility.yul\":918:919   */\n      0x00\n        /* \"#utility.yul\":943:995   */\n      tag_47\n        /* \"#utility.yul\":987:994   */\n      dup5\n        /* \"#utility.yul\":978:984   */\n      dup3\n        /* \"#utility.yul\":967:976   */\n      dup6\n        /* \"#utility.yul\":963:985   */\n      add\n        /* \"#utility.yul\":943:995   */\n      tag_26\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":933:995   */\n      swap2\n      pop\n        /* \"#utility.yul\":889:1005   */\n      pop\n        /* \"#utility.yul\":685:1012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1018:1108   */\n    tag_27:\n        /* \"#utility.yul\":1052:1059   */\n      0x00\n        /* \"#utility.yul\":1095:1100   */\n      dup2\n        /* \"#utility.yul\":1088:1101   */\n      iszero\n        /* \"#utility.yul\":1081:1102   */\n      iszero\n        /* \"#utility.yul\":1070:1102   */\n      swap1\n      pop\n        /* \"#utility.yul\":1018:1108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1114:1223   */\n    tag_28:\n        /* \"#utility.yul\":1195:1216   */\n      tag_50\n        /* \"#utility.yul\":1210:1215   */\n      dup2\n        /* \"#utility.yul\":1195:1216   */\n      tag_27\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1190:1193   */\n      dup3\n        /* \"#utility.yul\":1183:1217   */\n      mstore\n        /* \"#utility.yul\":1114:1223   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1229:1328   */\n    tag_29:\n        /* \"#utility.yul\":1281:1287   */\n      0x00\n        /* \"#utility.yul\":1315:1320   */\n      dup2\n        /* \"#utility.yul\":1309:1321   */\n      mload\n        /* \"#utility.yul\":1299:1321   */\n      swap1\n      pop\n        /* \"#utility.yul\":1229:1328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1334:1503   */\n    tag_30:\n        /* \"#utility.yul\":1418:1429   */\n      0x00\n        /* \"#utility.yul\":1452:1458   */\n      dup3\n        /* \"#utility.yul\":1447:1450   */\n      dup3\n        /* \"#utility.yul\":1440:1459   */\n      mstore\n        /* \"#utility.yul\":1492:1496   */\n      0x20\n        /* \"#utility.yul\":1487:1490   */\n      dup3\n        /* \"#utility.yul\":1483:1497   */\n      add\n        /* \"#utility.yul\":1468:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1334:1503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1755   */\n    tag_31:\n        /* \"#utility.yul\":1590:1591   */\n      0x00\n        /* \"#utility.yul\":1600:1713   */\n    tag_54:\n        /* \"#utility.yul\":1614:1620   */\n      dup4\n        /* \"#utility.yul\":1611:1612   */\n      dup2\n        /* \"#utility.yul\":1608:1621   */\n      lt\n        /* \"#utility.yul\":1600:1713   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1699:1700   */\n      dup1\n        /* \"#utility.yul\":1694:1697   */\n      dup3\n        /* \"#utility.yul\":1690:1701   */\n      add\n        /* \"#utility.yul\":1684:1702   */\n      mload\n        /* \"#utility.yul\":1680:1681   */\n      dup2\n        /* \"#utility.yul\":1675:1678   */\n      dup5\n        /* \"#utility.yul\":1671:1682   */\n      add\n        /* \"#utility.yul\":1664:1703   */\n      mstore\n        /* \"#utility.yul\":1636:1638   */\n      0x20\n        /* \"#utility.yul\":1633:1634   */\n      dup2\n        /* \"#utility.yul\":1629:1639   */\n      add\n        /* \"#utility.yul\":1624:1639   */\n      swap1\n      pop\n        /* \"#utility.yul\":1600:1713   */\n      jump(tag_54)\n    tag_56:\n        /* \"#utility.yul\":1747:1748   */\n      0x00\n        /* \"#utility.yul\":1738:1744   */\n      dup5\n        /* \"#utility.yul\":1733:1736   */\n      dup5\n        /* \"#utility.yul\":1729:1745   */\n      add\n        /* \"#utility.yul\":1722:1749   */\n      mstore\n        /* \"#utility.yul\":1571:1755   */\n      pop\n        /* \"#utility.yul\":1509:1755   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1761:1863   */\n    tag_32:\n        /* \"#utility.yul\":1802:1808   */\n      0x00\n        /* \"#utility.yul\":1853:1855   */\n      0x1f\n        /* \"#utility.yul\":1849:1856   */\n      not\n        /* \"#utility.yul\":1844:1846   */\n      0x1f\n        /* \"#utility.yul\":1837:1842   */\n      dup4\n        /* \"#utility.yul\":1833:1847   */\n      add\n        /* \"#utility.yul\":1829:1857   */\n      and\n        /* \"#utility.yul\":1819:1857   */\n      swap1\n      pop\n        /* \"#utility.yul\":1761:1863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1869:2246   */\n    tag_33:\n        /* \"#utility.yul\":1957:1960   */\n      0x00\n        /* \"#utility.yul\":1985:2024   */\n      tag_59\n        /* \"#utility.yul\":2018:2023   */\n      dup3\n        /* \"#utility.yul\":1985:2024   */\n      tag_29\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2040:2111   */\n      tag_60\n        /* \"#utility.yul\":2104:2110   */\n      dup2\n        /* \"#utility.yul\":2099:2102   */\n      dup6\n        /* \"#utility.yul\":2040:2111   */\n      tag_30\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2033:2111   */\n      swap4\n      pop\n        /* \"#utility.yul\":2120:2185   */\n      tag_61\n        /* \"#utility.yul\":2178:2184   */\n      dup2\n        /* \"#utility.yul\":2173:2176   */\n      dup6\n        /* \"#utility.yul\":2166:2170   */\n      0x20\n        /* \"#utility.yul\":2159:2164   */\n      dup7\n        /* \"#utility.yul\":2155:2171   */\n      add\n        /* \"#utility.yul\":2120:2185   */\n      tag_31\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2210:2239   */\n      tag_62\n        /* \"#utility.yul\":2232:2238   */\n      dup2\n        /* \"#utility.yul\":2210:2239   */\n      tag_32\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2205:2208   */\n      dup5\n        /* \"#utility.yul\":2201:2240   */\n      add\n        /* \"#utility.yul\":2194:2240   */\n      swap2\n      pop\n        /* \"#utility.yul\":1961:2246   */\n      pop\n        /* \"#utility.yul\":1869:2246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2252:2663   */\n    tag_9:\n        /* \"#utility.yul\":2387:2391   */\n      0x00\n        /* \"#utility.yul\":2425:2427   */\n      0x40\n        /* \"#utility.yul\":2414:2423   */\n      dup3\n        /* \"#utility.yul\":2410:2428   */\n      add\n        /* \"#utility.yul\":2402:2428   */\n      swap1\n      pop\n        /* \"#utility.yul\":2438:2503   */\n      tag_64\n        /* \"#utility.yul\":2500:2501   */\n      0x00\n        /* \"#utility.yul\":2489:2498   */\n      dup4\n        /* \"#utility.yul\":2485:2502   */\n      add\n        /* \"#utility.yul\":2476:2482   */\n      dup6\n        /* \"#utility.yul\":2438:2503   */\n      tag_28\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2550:2559   */\n      dup2\n        /* \"#utility.yul\":2544:2548   */\n      dup2\n        /* \"#utility.yul\":2540:2560   */\n      sub\n        /* \"#utility.yul\":2535:2537   */\n      0x20\n        /* \"#utility.yul\":2524:2533   */\n      dup4\n        /* \"#utility.yul\":2520:2538   */\n      add\n        /* \"#utility.yul\":2513:2561   */\n      mstore\n        /* \"#utility.yul\":2578:2656   */\n      tag_65\n        /* \"#utility.yul\":2651:2655   */\n      dup2\n        /* \"#utility.yul\":2642:2648   */\n      dup5\n        /* \"#utility.yul\":2578:2656   */\n      tag_33\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2570:2656   */\n      swap1\n      pop\n        /* \"#utility.yul\":2252:2663   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f01b86c90f2d5e8502672c8c5a93b849a2ce78b4c2578dd813827f6f04a65b5964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061033a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f5485bdf14610030575b600080fd5b61004a600480360381019061004591906101fc565b610061565b6040516100589291906102d4565b60405180910390f35b60006060603c8312610122576050831215801561007f575060648313155b156100c55760016040518060400160405280601181526020017f41636869657665642047726164653a2041000000000000000000000000000000815250915091506101bc565b603c83121580156100d75750604f8313155b1561011d5760016040518060400160405280601181526020017f41636869657665642047726164653a2042000000000000000000000000000000815250915091506101bc565b6101bb565b602883121580156101345750603b8313155b1561017a5760006040518060400160405280601181526020017f41636869657665642047726164653a2043000000000000000000000000000000815250915091506101bc565b60006040518060400160405280601581526020017f426574746572204c75636b204e6578742054696d650000000000000000000000815250915091506101bc565b5b915091565b600080fd5b6000819050919050565b6101d9816101c6565b81146101e457600080fd5b50565b6000813590506101f6816101d0565b92915050565b600060208284031215610212576102116101c1565b5b6000610220848285016101e7565b91505092915050565b60008115159050919050565b61023e81610229565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561027e578082015181840152602081019050610263565b60008484015250505050565b6000601f19601f8301169050919050565b60006102a682610244565b6102b0818561024f565b93506102c0818560208601610260565b6102c98161028a565b840191505092915050565b60006040820190506102e96000830185610235565b81810360208301526102fb818461029b565b9050939250505056fea2646970667358221220f01b86c90f2d5e8502672c8c5a93b849a2ce78b4c2578dd813827f6f04a65b5964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF5485BDF EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP3 SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x3C DUP4 SLT PUSH2 0x122 JUMPI PUSH1 0x50 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x7F JUMPI POP PUSH1 0x64 DUP4 SGT ISZERO JUMPDEST ISZERO PUSH2 0xC5 JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41636869657665642047726164653A2041000000000000000000000000000000 DUP2 MSTORE POP SWAP2 POP SWAP2 POP PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x3C DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0xD7 JUMPI POP PUSH1 0x4F DUP4 SGT ISZERO JUMPDEST ISZERO PUSH2 0x11D JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41636869657665642047726164653A2042000000000000000000000000000000 DUP2 MSTORE POP SWAP2 POP SWAP2 POP PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x28 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x134 JUMPI POP PUSH1 0x3B DUP4 SGT ISZERO JUMPDEST ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41636869657665642047726164653A2043000000000000000000000000000000 DUP2 MSTORE POP SWAP2 POP SWAP2 POP PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426574746572204C75636B204E6578742054696D650000000000000000000000 DUP2 MSTORE POP SWAP2 POP SWAP2 POP PUSH2 0x1BC JUMP JUMPDEST JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9 DUP2 PUSH2 0x1C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F6 DUP2 PUSH2 0x1D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x212 JUMPI PUSH2 0x211 PUSH2 0x1C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x220 DUP5 DUP3 DUP6 ADD PUSH2 0x1E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x229 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x263 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6 DUP3 PUSH2 0x244 JUMP JUMPDEST PUSH2 0x2B0 DUP2 DUP6 PUSH2 0x24F JUMP JUMPDEST SWAP4 POP PUSH2 0x2C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x260 JUMP JUMPDEST PUSH2 0x2C9 DUP2 PUSH2 0x28A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x235 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2FB DUP2 DUP5 PUSH2 0x29B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SHL DUP7 0xC9 0xF 0x2D 0x5E DUP6 MUL PUSH8 0x2C8C5A93B849A2CE PUSH25 0xB4C2578DD813827F6F04A65B5964736F6C6343000812003300 ",
							"sourceMap": "61:599:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@gradeExam_61": {
									"entryPoint": 97,
									"id": 61,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_t_int256": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_string_memory_ptr__to_t_bool_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_int256": {
									"entryPoint": 464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2666:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "399:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:76:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "458:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "514:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "523:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "516:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "516:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "481:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "505:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "488:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "488:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "478:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "478:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:42:1"
															},
															"nodeType": "YulIf",
															"src": "468:62:1"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "451:5:1",
														"type": ""
													}
												],
												"src": "416:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "603:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "625:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "612:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "612:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "603:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "667:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "641:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "641:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "641:32:1"
														}
													]
												},
												"name": "abi_decode_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "571:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "579:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "587:5:1",
														"type": ""
													}
												],
												"src": "542:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "750:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "796:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "798:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "798:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "798:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "771:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "780:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "767:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "792:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:32:1"
															},
															"nodeType": "YulIf",
															"src": "760:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "889:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "904:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "908:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "933:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "967:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "978:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "963:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "963:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "987:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "943:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "943:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "720:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "731:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "743:6:1",
														"type": ""
													}
												],
												"src": "685:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1060:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1095:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1088:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1088:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1081:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1070:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1042:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1052:7:1",
														"type": ""
													}
												],
												"src": "1018:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1173:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1190:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1210:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1195:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1195:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1183:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1161:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1168:3:1",
														"type": ""
													}
												],
												"src": "1114:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1288:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1299:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1315:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1309:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1271:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1281:6:1",
														"type": ""
													}
												],
												"src": "1229:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1430:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1447:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1452:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1468:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1487:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1492:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1483:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1468:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1402:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1407:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1418:11:1",
														"type": ""
													}
												],
												"src": "1334:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1571:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1581:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1590:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1585:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1650:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1675:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1680:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1671:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1671:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1694:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1699:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1690:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1690:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1684:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1684:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1664:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1664:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1664:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1611:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1614:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1608:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1622:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1624:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1633:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1636:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1629:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1629:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1624:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1604:3:1",
																"statements": []
															},
															"src": "1600:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1733:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1738:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1729:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1729:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1747:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1722:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1722:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1722:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1553:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1558:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1563:6:1",
														"type": ""
													}
												],
												"src": "1509:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1819:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1837:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1844:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1833:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1849:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1829:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1819:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1792:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1802:6:1",
														"type": ""
													}
												],
												"src": "1761:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1961:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1971:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2018:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1985:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1975:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2033:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2099:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2104:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2040:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2033:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2159:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2166:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2155:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2155:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2173:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2178:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2120:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2120:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2194:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2205:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2232:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2210:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2210:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2201:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2194:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1942:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1949:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1957:3:1",
														"type": ""
													}
												],
												"src": "1869:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2392:271:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2402:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2414:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2425:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2410:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2410:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2402:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2489:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2500:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2485:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2438:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2438:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2438:65:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2524:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2535:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2520:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2544:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2550:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2540:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2513:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2513:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2570:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2642:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2651:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2578:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2578:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2570:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_string_memory_ptr__to_t_bool_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2356:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2368:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2376:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2387:4:1",
														"type": ""
													}
												],
												"src": "2252:411:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_string_memory_ptr__to_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f5485bdf14610030575b600080fd5b61004a600480360381019061004591906101fc565b610061565b6040516100589291906102d4565b60405180910390f35b60006060603c8312610122576050831215801561007f575060648313155b156100c55760016040518060400160405280601181526020017f41636869657665642047726164653a2041000000000000000000000000000000815250915091506101bc565b603c83121580156100d75750604f8313155b1561011d5760016040518060400160405280601181526020017f41636869657665642047726164653a2042000000000000000000000000000000815250915091506101bc565b6101bb565b602883121580156101345750603b8313155b1561017a5760006040518060400160405280601181526020017f41636869657665642047726164653a2043000000000000000000000000000000815250915091506101bc565b60006040518060400160405280601581526020017f426574746572204c75636b204e6578742054696d650000000000000000000000815250915091506101bc565b5b915091565b600080fd5b6000819050919050565b6101d9816101c6565b81146101e457600080fd5b50565b6000813590506101f6816101d0565b92915050565b600060208284031215610212576102116101c1565b5b6000610220848285016101e7565b91505092915050565b60008115159050919050565b61023e81610229565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561027e578082015181840152602081019050610263565b60008484015250505050565b6000601f19601f8301169050919050565b60006102a682610244565b6102b0818561024f565b93506102c0818560208601610260565b6102c98161028a565b840191505092915050565b60006040820190506102e96000830185610235565b81810360208301526102fb818461029b565b9050939250505056fea2646970667358221220f01b86c90f2d5e8502672c8c5a93b849a2ce78b4c2578dd813827f6f04a65b5964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF5485BDF EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP3 SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x3C DUP4 SLT PUSH2 0x122 JUMPI PUSH1 0x50 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x7F JUMPI POP PUSH1 0x64 DUP4 SGT ISZERO JUMPDEST ISZERO PUSH2 0xC5 JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41636869657665642047726164653A2041000000000000000000000000000000 DUP2 MSTORE POP SWAP2 POP SWAP2 POP PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x3C DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0xD7 JUMPI POP PUSH1 0x4F DUP4 SGT ISZERO JUMPDEST ISZERO PUSH2 0x11D JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41636869657665642047726164653A2042000000000000000000000000000000 DUP2 MSTORE POP SWAP2 POP SWAP2 POP PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x28 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x134 JUMPI POP PUSH1 0x3B DUP4 SGT ISZERO JUMPDEST ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41636869657665642047726164653A2043000000000000000000000000000000 DUP2 MSTORE POP SWAP2 POP SWAP2 POP PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426574746572204C75636B204E6578742054696D650000000000000000000000 DUP2 MSTORE POP SWAP2 POP SWAP2 POP PUSH2 0x1BC JUMP JUMPDEST JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9 DUP2 PUSH2 0x1C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F6 DUP2 PUSH2 0x1D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x212 JUMPI PUSH2 0x211 PUSH2 0x1C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x220 DUP5 DUP3 DUP6 ADD PUSH2 0x1E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x229 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x263 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6 DUP3 PUSH2 0x244 JUMP JUMPDEST PUSH2 0x2B0 DUP2 DUP6 PUSH2 0x24F JUMP JUMPDEST SWAP4 POP PUSH2 0x2C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x260 JUMP JUMPDEST PUSH2 0x2C9 DUP2 PUSH2 0x28A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x235 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2FB DUP2 DUP5 PUSH2 0x29B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SHL DUP7 0xC9 0xF 0x2D 0x5E DUP6 MUL PUSH8 0x2C8C5A93B849A2CE PUSH25 0xB4C2578DD813827F6F04A65B5964736F6C6343000812003300 ",
							"sourceMap": "61:599:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;88:569;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;139:11;152:19;197:2;188:5;:11;184:466;;229:2;220:5;:11;;:27;;;;;244:3;235:5;:12;;220:27;216:209;;;276:4;268:34;;;;;;;;;;;;;;;;;;;;;;;216:209;337:2;328:5;:11;;:26;;;;;352:2;343:5;:11;;328:26;324:101;;;383:4;375:34;;;;;;;;;;;;;;;;;;;;;;;324:101;184:466;;;470:2;461:5;:11;;:26;;;;;485:2;476:5;:11;;461:26;457:182;;;516:5;508:35;;;;;;;;;;;;;;;;;;;;;;;457:182;592:5;584:39;;;;;;;;;;;;;;;;;;;;;;;184:466;88:569;;;;:::o;:117:1:-;197:1;194;187:12;334:76;370:7;399:5;388:16;;334:76;;;:::o;416:120::-;488:23;505:5;488:23;:::i;:::-;481:5;478:34;468:62;;526:1;523;516:12;468:62;416:120;:::o;542:137::-;587:5;625:6;612:20;603:29;;641:32;667:5;641:32;:::i;:::-;542:137;;;;:::o;685:327::-;743:6;792:2;780:9;771:7;767:23;763:32;760:119;;;798:79;;:::i;:::-;760:119;918:1;943:52;987:7;978:6;967:9;963:22;943:52;:::i;:::-;933:62;;889:116;685:327;;;;:::o;1018:90::-;1052:7;1095:5;1088:13;1081:21;1070:32;;1018:90;;;:::o;1114:109::-;1195:21;1210:5;1195:21;:::i;:::-;1190:3;1183:34;1114:109;;:::o;1229:99::-;1281:6;1315:5;1309:12;1299:22;;1229:99;;;:::o;1334:169::-;1418:11;1452:6;1447:3;1440:19;1492:4;1487:3;1483:14;1468:29;;1334:169;;;;:::o;1509:246::-;1590:1;1600:113;1614:6;1611:1;1608:13;1600:113;;;1699:1;1694:3;1690:11;1684:18;1680:1;1675:3;1671:11;1664:39;1636:2;1633:1;1629:10;1624:15;;1600:113;;;1747:1;1738:6;1733:3;1729:16;1722:27;1571:184;1509:246;;;:::o;1761:102::-;1802:6;1853:2;1849:7;1844:2;1837:5;1833:14;1829:28;1819:38;;1761:102;;;:::o;1869:377::-;1957:3;1985:39;2018:5;1985:39;:::i;:::-;2040:71;2104:6;2099:3;2040:71;:::i;:::-;2033:78;;2120:65;2178:6;2173:3;2166:4;2159:5;2155:16;2120:65;:::i;:::-;2210:29;2232:6;2210:29;:::i;:::-;2205:3;2201:39;2194:46;;1961:285;1869:377;;;;:::o;2252:411::-;2387:4;2425:2;2414:9;2410:18;2402:26;;2438:65;2500:1;2489:9;2485:17;2476:6;2438:65;:::i;:::-;2550:9;2544:4;2540:20;2535:2;2524:9;2520:18;2513:48;2578:78;2651:4;2642:6;2578:78;:::i;:::-;2570:86;;2252:411;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "165200",
								"executionCost": "208",
								"totalCost": "165408"
							},
							"external": {
								"gradeExam(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 660,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 660,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 660,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 660,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 660,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 660,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61,
									"end": 660,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 660,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 660,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 660,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 660,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61,
									"end": 660,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 660,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 660,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 660,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 660,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 660,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 660,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 660,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 660,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 660,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f01b86c90f2d5e8502672c8c5a93b849a2ce78b4c2578dd813827f6f04a65b5964736f6c63430008120033",
									".code": [
										{
											"begin": 61,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "F5485BDF"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 660,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 88,
											"end": 657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 88,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 88,
											"end": 657,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 88,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 88,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 139,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 171,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 197,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 188,
											"end": 199,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 229,
											"end": 231,
											"name": "PUSH",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 220,
											"end": 225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 220,
											"end": 231,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 220,
											"end": 231,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 220,
											"end": 247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 220,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 220,
											"end": 247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 220,
											"end": 247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 244,
											"end": 247,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 235,
											"end": 247,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 235,
											"end": 247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 220,
											"end": 247,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 220,
											"end": 247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 216,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 216,
											"end": 425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 276,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 268,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 268,
											"end": 302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 268,
											"end": 302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "41636869657665642047726164653A2041000000000000000000000000000000"
										},
										{
											"begin": 268,
											"end": 302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 268,
											"end": 302,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 425,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 216,
											"end": 425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 328,
											"end": 339,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 328,
											"end": 339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 328,
											"end": 354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 328,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 328,
											"end": 354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 328,
											"end": 354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 352,
											"end": 354,
											"name": "PUSH",
											"source": 0,
											"value": "4F"
										},
										{
											"begin": 343,
											"end": 348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 343,
											"end": 354,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 343,
											"end": 354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 328,
											"end": 354,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 328,
											"end": 354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 324,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 324,
											"end": 425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 383,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 375,
											"end": 409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "41636869657665642047726164653A2042000000000000000000000000000000"
										},
										{
											"begin": 375,
											"end": 409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 375,
											"end": 409,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 425,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 324,
											"end": 425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 184,
											"end": 650,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 470,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 461,
											"end": 466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 461,
											"end": 472,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 461,
											"end": 472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 461,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 461,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 461,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 485,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "3B"
										},
										{
											"begin": 476,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 476,
											"end": 487,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 476,
											"end": 487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 461,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 639,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 457,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 457,
											"end": 639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 508,
											"end": 543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 508,
											"end": 543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "41636869657665642047726164653A2043000000000000000000000000000000"
										},
										{
											"begin": 508,
											"end": 543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 508,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 508,
											"end": 543,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 457,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 584,
											"end": 623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "426574746572204C75636B204E6578742054696D650000000000000000000000"
										},
										{
											"begin": 584,
											"end": 623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 584,
											"end": 623,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 184,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 88,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 334,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 388,
											"end": 404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 416,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 505,
											"end": 510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 488,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 478,
											"end": 512,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 468,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 468,
											"end": 530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 468,
											"end": 530,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 468,
											"end": 530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 542,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 587,
											"end": 592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 612,
											"end": 632,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 603,
											"end": 632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 603,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 667,
											"end": 672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 641,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 673,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 641,
											"end": 673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1012,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 685,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 743,
											"end": 749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 771,
											"end": 778,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 767,
											"end": 790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 763,
											"end": 795,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 760,
											"end": 879,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 760,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 760,
											"end": 879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 798,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 798,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 798,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 877,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 798,
											"end": 877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 760,
											"end": 879,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 760,
											"end": 879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 918,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 987,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 978,
											"end": 984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 967,
											"end": 976,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 963,
											"end": 985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 943,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 943,
											"end": 995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 943,
											"end": 995,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 943,
											"end": 995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 933,
											"end": 995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 933,
											"end": 995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 889,
											"end": 1005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1012,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1108,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1018,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1101,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1108,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1114,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1210,
											"end": 1215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1195,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1216,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1195,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1328,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1229,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1321,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1334,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1459,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1503,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1509,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1713,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1600,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1621,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1713,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1600,
											"end": 1713,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1700,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 1697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1678,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1638,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1600,
											"end": 1713,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1713,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1600,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1744,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1736,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1761,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1846,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 2246,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1869,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 1960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1985,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2024,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1985,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2104,
											"end": 2110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2102,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2040,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2111,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2040,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2111,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2178,
											"end": 2184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2176,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2159,
											"end": 2164,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2120,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2185,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2120,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2232,
											"end": 2238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2210,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2210,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 2246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 2246,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 2246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 2246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 2246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 2246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2663,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2252,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2438,
											"end": 2503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2503,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2438,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2560,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2524,
											"end": 2533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2651,
											"end": 2655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2648,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2578,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2656,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2578,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2663,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"lab4solidity.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"gradeExam(int256)": "f5485bdf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"score\",\"type\":\"int256\"}],\"name\":\"gradeExam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"passed\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"grade\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lab4solidity.sol\":\"ExamGrader\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lab4solidity.sol\":{\"keccak256\":\"0x33c12a22c66dcef2468e043c765de8c6392eb9770091ecffbada7c45d6afa41c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32db14c3973d5c248045189739884002f89d3b87df1977c4ea2819173f1b17c9\",\"dweb:/ipfs/QmbCA9oXYQQAuxMKAB2W4kvdEndspS6uhCMQqPffcAr8Mr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lab4solidity.sol": {
				"ast": {
					"absolutePath": "lab4solidity.sol",
					"exportedSymbols": {
						"ExamGrader": [
							62
						]
					},
					"id": 63,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ExamGrader",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "ExamGrader",
							"nameLocation": "70:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "173:484:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 10,
														"name": "score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "188:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3630",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "197:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "60"
													},
													"src": "188:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 58,
													"nodeType": "Block",
													"src": "442:208:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 40,
																		"name": "score",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "461:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "3430",
																		"id": 41,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "470:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	"src": "461:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 45,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 43,
																		"name": "score",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "476:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "3539",
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "485:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_59_by_1",
																			"typeString": "int_const 59"
																		},
																		"value": "59"
																	},
																	"src": "476:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "461:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 56,
																"nodeType": "Block",
																"src": "565:74:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "66616c7365",
																					"id": 52,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "592:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				},
																				{
																					"hexValue": "426574746572204c75636b204e6578742054696d65",
																					"id": 53,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "599:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_ad9148c54584e02a07480ba9cecce8d79be8eea8e33185ce5592625f5354efbc",
																						"typeString": "literal_string \"Better Luck Next Time\""
																					},
																					"value": "Better Luck Next Time"
																				}
																			],
																			"id": 54,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "591:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_ad9148c54584e02a07480ba9cecce8d79be8eea8e33185ce5592625f5354efbc_$",
																				"typeString": "tuple(bool,literal_string \"Better Luck Next Time\")"
																			}
																		},
																		"functionReturnParameters": 9,
																		"id": 55,
																		"nodeType": "Return",
																		"src": "584:39:0"
																	}
																]
															},
															"id": 57,
															"nodeType": "IfStatement",
															"src": "457:182:0",
															"trueBody": {
																"id": 51,
																"nodeType": "Block",
																"src": "489:70:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "66616c7365",
																					"id": 47,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "516:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				},
																				{
																					"hexValue": "41636869657665642047726164653a2043",
																					"id": 48,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "523:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_9b597d3ff62d47b90a4bff8acf18eb46e0e39a46832cd9b41f6f05973f8440b8",
																						"typeString": "literal_string \"Achieved Grade: C\""
																					},
																					"value": "Achieved Grade: C"
																				}
																			],
																			"id": 49,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "515:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_9b597d3ff62d47b90a4bff8acf18eb46e0e39a46832cd9b41f6f05973f8440b8_$",
																				"typeString": "tuple(bool,literal_string \"Achieved Grade: C\")"
																			}
																		},
																		"functionReturnParameters": 9,
																		"id": 50,
																		"nodeType": "Return",
																		"src": "508:35:0"
																	}
																]
															}
														}
													]
												},
												"id": 59,
												"nodeType": "IfStatement",
												"src": "184:466:0",
												"trueBody": {
													"id": 39,
													"nodeType": "Block",
													"src": "201:235:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 13,
																		"name": "score",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "220:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "3830",
																		"id": 14,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "229:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	"src": "220:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 16,
																		"name": "score",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "235:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 17,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "244:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "235:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "220:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 25,
																			"name": "score",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3,
																			"src": "328:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "3630",
																			"id": 26,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "337:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_60_by_1",
																				"typeString": "int_const 60"
																			},
																			"value": "60"
																		},
																		"src": "328:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 28,
																			"name": "score",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3,
																			"src": "343:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "3739",
																			"id": 29,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "352:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_79_by_1",
																				"typeString": "int_const 79"
																			},
																			"value": "79"
																		},
																		"src": "343:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "328:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 37,
																"nodeType": "IfStatement",
																"src": "324:101:0",
																"trueBody": {
																	"id": 36,
																	"nodeType": "Block",
																	"src": "356:69:0",
																	"statements": [
																		{
																			"expression": {
																				"components": [
																					{
																						"hexValue": "74727565",
																						"id": 32,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "383:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					},
																					{
																						"hexValue": "41636869657665642047726164653a2042",
																						"id": 33,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "389:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_faac9352a80fd883657b6c17a01481cb10d306a0bc222282b24451d1f63ac221",
																							"typeString": "literal_string \"Achieved Grade: B\""
																						},
																						"value": "Achieved Grade: B"
																					}
																				],
																				"id": 34,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "382:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_faac9352a80fd883657b6c17a01481cb10d306a0bc222282b24451d1f63ac221_$",
																					"typeString": "tuple(bool,literal_string \"Achieved Grade: B\")"
																				}
																			},
																			"functionReturnParameters": 9,
																			"id": 35,
																			"nodeType": "Return",
																			"src": "375:34:0"
																		}
																	]
																}
															},
															"id": 38,
															"nodeType": "IfStatement",
															"src": "216:209:0",
															"trueBody": {
																"id": 24,
																"nodeType": "Block",
																"src": "249:69:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 20,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "276:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"hexValue": "41636869657665642047726164653a2041",
																					"id": 21,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "282:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_39de788fe9e57c980f25542e0d0ae4eca337aebeb972d902361eda2f32292af2",
																						"typeString": "literal_string \"Achieved Grade: A\""
																					},
																					"value": "Achieved Grade: A"
																				}
																			],
																			"id": 22,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "275:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_39de788fe9e57c980f25542e0d0ae4eca337aebeb972d902361eda2f32292af2_$",
																				"typeString": "tuple(bool,literal_string \"Achieved Grade: A\")"
																			}
																		},
																		"functionReturnParameters": 9,
																		"id": 23,
																		"nodeType": "Return",
																		"src": "268:34:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "f5485bdf",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gradeExam",
									"nameLocation": "97:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "score",
												"nameLocation": "111:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "107:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "107:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "106:11:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "passed",
												"nameLocation": "144:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "139:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "139:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "166:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "152:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 7,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "152:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:34:0"
									},
									"scope": 62,
									"src": "88:569:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 63,
							"src": "61:599:0",
							"usedErrors": []
						}
					],
					"src": "33:633:0"
				},
				"id": 0
			}
		}
	}
}